[{"C:\\Users\\Admin\\Videos\\twitter_app\\src\\index.js":"1","C:\\Users\\Admin\\Videos\\twitter_app\\src\\App.js":"2","C:\\Users\\Admin\\Videos\\twitter_app\\src\\reportWebVitals.js":"3","C:\\Users\\Admin\\Videos\\twitter_app\\src\\Sidebar.js":"4","C:\\Users\\Admin\\Videos\\twitter_app\\src\\SidebarOption.js":"5","C:\\Users\\Admin\\Videos\\twitter_app\\src\\Feed.js":"6","C:\\Users\\Admin\\Videos\\twitter_app\\src\\Widgets.js":"7","C:\\Users\\Admin\\Videos\\twitter_app\\src\\TweetBox.js":"8","C:\\Users\\Admin\\Videos\\twitter_app\\src\\Post.js":"9","C:\\Users\\Admin\\Videos\\twitter_app\\src\\SignUp.js":"10","C:\\Users\\Admin\\Videos\\twitter_app\\src\\Login.js":"11","C:\\Users\\Admin\\Videos\\twitter_app\\src\\firebase.js":"12","C:\\Users\\Admin\\Videos\\twitter_app\\src\\ProtectedRoute.js":"13","C:\\Users\\Admin\\Videos\\twitter_app\\src\\PublicRoute.js":"14","C:\\Users\\Admin\\Videos\\twitter_app\\src\\Profile.js":"15","C:\\Users\\Admin\\Videos\\twitter_app\\src\\FullPage.js":"16","C:\\Users\\Admin\\Videos\\twitter_app\\src\\ViewMessage.js":"17","C:\\Users\\Admin\\Videos\\twitter_app\\src\\Notification.js":"18","C:\\Users\\Admin\\Videos\\twitter_app\\src\\UserProfile.js":"19","C:\\Users\\Admin\\Videos\\twitter_app\\src\\ForgettenPassword.js":"20"},{"size":500,"mtime":499162500000,"results":"21","hashOfConfig":"22"},{"size":1102,"mtime":1609997879641,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":2220,"mtime":1610035510404,"results":"25","hashOfConfig":"22"},{"size":919,"mtime":1610003626638,"results":"26","hashOfConfig":"22"},{"size":1284,"mtime":1610085004213,"results":"27","hashOfConfig":"22"},{"size":1020,"mtime":1609910425889,"results":"28","hashOfConfig":"22"},{"size":4611,"mtime":1610032246462,"results":"29","hashOfConfig":"22"},{"size":9036,"mtime":1610031611296,"results":"30","hashOfConfig":"22"},{"size":2864,"mtime":1610084115647,"results":"31","hashOfConfig":"22"},{"size":2464,"mtime":1610085793139,"results":"32","hashOfConfig":"22"},{"size":584,"mtime":1609320251365,"results":"33","hashOfConfig":"22"},{"size":449,"mtime":1609507355286,"results":"34","hashOfConfig":"22"},{"size":444,"mtime":1609507417132,"results":"35","hashOfConfig":"22"},{"size":6885,"mtime":1610085405665,"results":"36","hashOfConfig":"22"},{"size":1068,"mtime":1609999004214,"results":"37","hashOfConfig":"22"},{"size":3912,"mtime":1610029428173,"results":"38","hashOfConfig":"22"},{"size":3646,"mtime":1609995225232,"results":"39","hashOfConfig":"22"},{"size":6985,"mtime":1610032027395,"results":"40","hashOfConfig":"22"},{"size":1581,"mtime":1610084153368,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1eywn15",{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Admin\\Videos\\twitter_app\\src\\index.js",[],["92","93"],"C:\\Users\\Admin\\Videos\\twitter_app\\src\\App.js",["94","95","96"],"import './App.css';\nimport Login from './Login'\nimport {BrowserRouter as Router,Route,Switch,Link, Redirect} from 'react-router-dom'\nimport Home from './FullPage'\nimport ProtectedRoute from './ProtectedRoute'\nimport PublicRoute from './PublicRoute';\nimport createBrowserHistory from 'history/createBrowserHistory'\nimport Notification from './Notification'\nimport Profile from './Profile'\nimport ViewMessage from './ViewMessage'\nimport UserProfile from './UserProfile'\nexport const history=createBrowserHistory();\nfunction App() {\n  return (\n    <div >\n      <Router history={history}>\n        \n        <Switch>\n        <PublicRoute exact path=\"/\" component={Login} />   \n        <ProtectedRoute exact={true} path=\"/home\" component={Home} /> \n        <ProtectedRoute exact path=\"/profile\" component={Profile}/>\n        <ProtectedRoute exact path=\"/notification\" component={Notification}/>\n        <ProtectedRoute  path=\"/posts/:id\" component={ViewMessage}/>\n        <ProtectedRoute  path=\"/profile/:id\" component={UserProfile}/>\n        </Switch>\n      </Router> \n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Admin\\Videos\\twitter_app\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\Videos\\twitter_app\\src\\Sidebar.js",["97","98","99","100","101","102"],"import React,{useEffect,useState} from 'react'\r\nimport Image from './img1/logo .png'\r\nimport SidebarOption from './SidebarOption'\r\nimport TwitterIcon from '@material-ui/icons/Twitter'\r\nimport Home from '@material-ui/icons/Home'\r\nimport Notification from '@material-ui/icons/NotificationsNone'\r\nimport Profile from '@material-ui/icons/PermIdentity'\r\nimport Logout from '@material-ui/icons/MoreHorizRounded'\r\nimport './sidebar.css'\r\nimport {useHistory} from 'react-router-dom';\r\nimport firebase from './firebase';\r\n\r\n\r\nconst Sidebar = () => {\r\n    \r\n    let history = useHistory();\r\n    const[path,setPath]=useState(\"\");\r\n    const email=  JSON.parse(localStorage.getItem(\"firebase:authUser:AIzaSyAkUiaMAotBOT7GJHblVk2gC9h37myNPiY:[DEFAULT]\")).email;\r\n    const[count,setCount]=useState(\"\");\r\n    useEffect(() => {\r\n        setPath(history.location.pathname);\r\n        firebase.database().ref('/regusers').orderByChild('email').equalTo(email).once('value',async(snap)=>{\r\n            await snap.forEach((snap)=>{\r\n                setCount(0);\r\n               firebase.database().ref('/posts').orderByChild('username').equalTo(snap.val().username).once('value',async(snap)=>{\r\n                  await snap.forEach((s)=>{\r\n                       if(s.val().like>0){\r\n                           setCount(prevState=>prevState+1);\r\n                       }\r\n                   })\r\n               })\r\n                \r\n             })\r\n         })\r\n         \r\n        \r\n    }, [])\r\n  \r\n    return (\r\n        \r\n            <div className=\"sidebar\" >\r\n                <div className=\"sidebar1\">\r\n                <img src={Image}  width=\"50px\" height=\"50px\"/>\r\n                <SidebarOption active={path==\"/home\"?true:false} Icon={Home} text=\"Home\" path=\"/home\"  />\r\n                <SidebarOption active={path==\"/notification\"?true:false} Icon={Notification} text=\"Notifications\" path=\"/notification\" count={count}/>\r\n                <SidebarOption active={path==\"/profile\"?true:false} Icon={Profile} text=\"Profile\" path=\"/profile\" />\r\n                <SidebarOption  Icon={Logout} text=\"Logout\"  />\r\n                </div>\r\n               \r\n               \r\n            </div>\r\n           \r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n ","C:\\Users\\Admin\\Videos\\twitter_app\\src\\SidebarOption.js",["103"],"import React from 'react'\r\nimport './SidebarOption.css'\r\nimport {useHistory} from 'react-router-dom'\r\nimport firebase from './firebase'\r\nconst SidebarOption = ({active,text,Icon,path,count}) => {\r\n    var tag;\r\n    const logout=()=>{\r\n        firebase.auth().signOut().then(() => {\r\n            localStorage.setItem(\"auth-token\",\"\");\r\n            history.push('/');\r\n          }).catch((error) => {\r\n           console.log(error)\r\n          }); console.log(\"logout\");\r\n          \r\n    }\r\n   if(count){\r\n       tag=<p className=\"notification_count\">{count}</p>\r\n   }\r\n    let history = useHistory();\r\n    return (\r\n        <div className={`SidebarOption ${active && \"sidebar--active\"}` } onClick={()=>history.push(path)}>\r\n                {tag}\r\n            <Icon  />\r\n            <h2  onClick={text==\"Logout\" ? logout:\"\"}>{text}</h2>\r\n           \r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarOption\r\n","C:\\Users\\Admin\\Videos\\twitter_app\\src\\Feed.js",["104","105","106"],"C:\\Users\\Admin\\Videos\\twitter_app\\src\\Widgets.js",["107","108","109","110","111","112","113","114","115","116"],"import React from 'react'\r\nimport './Widgets.css';\r\nimport Search from '@material-ui/icons/SearchRounded'\r\n\r\nimport { TwitterTimelineEmbed, TwitterShareButton, TwitterFollowButton, TwitterHashtagButton, TwitterMentionButton, TwitterTweetEmbed, TwitterMomentShare, TwitterDMButton, TwitterVideoEmbed, TwitterOnAirButton } from 'react-twitter-embed';\r\nconst Widgets = () => {\r\n    return (\r\n        <div className=\"widgets_list\">\r\n        <div className=\"widgets\">\r\n         \r\n           <div className=\"widgets_widgetContainer\">\r\n              \r\n                    <h2>What's happening</h2>\r\n                    <div className=\"centerContent\">\r\n                    <div className=\"selfCenter spaceBetween standardWidth\">\r\n                    <TwitterTimelineEmbed sourceType=\"timeline\" id=\"539487832448843776\" options={{height: 400,tweetLimit: 1}} />\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n               \r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Widgets\r\n","C:\\Users\\Admin\\Videos\\twitter_app\\src\\TweetBox.js",["117","118","119","120","121","122"],"import React,{useState,useEffect} from 'react'\r\nimport './TweetBox.css'\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PhotoCamera from \"@material-ui/icons/Image\";\r\nimport Person from '@material-ui/icons/AccountCircle'\r\nimport firebase from './firebase'\r\nimport Smiley from '@material-ui/icons/EmojiEmotions';\r\nimport {Redirect,useHistory,useLocation} from 'react-router-dom'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      \"& > *\": {\r\n        margin: theme.spacing(1)\r\n      }\r\n    },\r\n    input: {\r\n      display: \"none\"\r\n    }\r\n  }));\r\nconst TweetBox = (props) => {\r\n  let history = useHistory();\r\n    \r\n    const[name,setName]=useState(\"\");\r\n    const[userName,setUserName]=useState(\"\");\r\n    const[email,setEmail]=useState(\"\");\r\n    const [count,setCount]=useState(0);\r\n    const[id,setId]=useState(\"\");\r\n    const[Profile,setProfile]=useState(\"\");\r\n    const uid=  JSON.parse(localStorage.getItem(\"firebase:authUser:AIzaSyAkUiaMAotBOT7GJHblVk2gC9h37myNPiY:[DEFAULT]\")).uid;\r\n    useEffect(() => {\r\n      firebase.database().ref('regusers').orderByChild('id').equalTo(uid).on('value',async(snap)=>{\r\n         await snap.forEach((s)=>{\r\n            setProfile(s.val().profileImg)\r\n              setId(s.key);\r\n              setName(s.val().name);\r\n              setUserName(s.val().username);\r\n              setEmail(s.val().email);\r\n              setCount(s.val().posts)\r\n          })\r\n      });\r\n     \r\n       \r\n    }, [Profile])\r\n    const[image,setImage]=useState(null);\r\n    const[content,setContent]=useState(\"\");\r\n    const classes = useStyles();\r\n    const Post=(e)=>{\r\n         e.preventDefault();\r\n        if(content){\r\n       \r\n        var storageUrl = 'image/';\r\n        if(image){\r\n        var storageRef = firebase.storage().ref(storageUrl + image[0].name);\r\n        storageRef.put(image[0]);\r\n          firebase.storage().ref(storageUrl).child(image[0].name).getDownloadURL().then((url)=>{\r\n            firebase.database().ref('/posts').push({\r\n                name:name,\r\n                username:userName,\r\n                email,\r\n                content,\r\n                image:url,\r\n                like:0,\r\n                comments:'',\r\n                likedBy:\"\",\r\n                commentCount:0,\r\n                id:uid,\r\n            })\r\n            firebase.database().ref(`regusers/${id}`).update({\r\n              \"posts\":count+1\r\n            })\r\n            setCount(prevState=>prevState+1)\r\n\r\n         });\r\n        }\r\n        else{\r\n            firebase.database().ref('/posts').push({\r\n                name:name,\r\n                username:userName,\r\n                email,\r\n                content,\r\n                image:'',\r\n                like:0,\r\n                comments:'',\r\n                likedBy:\"\",\r\n                commentCount:0,\r\n                id:uid\r\n            })\r\n            \r\n            console.log(count);\r\n            firebase.database().ref(`regusers/${id}`).update({\r\n              \"posts\":count+1\r\n            })\r\n            setCount(prevState=>prevState+1)\r\n            \r\n        }\r\n        setImage(\"\");\r\n        setContent(\"\");\r\n    }\r\n    }\r\n    const handleChange=(e)=>{\r\n      \r\n     setImage(e.target.files);\r\n    }\r\n    const routeChange=()=>{\r\n      history.push('/profile')\r\n    }\r\n   \r\n    return (\r\n        <div className=\"tweet_box\">\r\n            <form>\r\n                <div className=\"tweet_box_input\">\r\n                  {\r\n                    Profile==\"\" ?\r\n                  \r\n                    <Person className=\"person\" onClick={routeChange}/>\r\n                    :\r\n                    <img src={Profile} className=\"person view_msg\" onClick={routeChange} />\r\n                  }\r\n                    <input type=\"text\" placeholder=\"what's happening?\" value={content} onChange={(e)=>setContent(e.target.value)}/>\r\n               </div>\r\n               <div className=\"other\">\r\n                <div >\r\n                  <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" onChange={handleChange}/>\r\n                  <label htmlFor=\"icon-button-file\"  >\r\n                      <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\"  style={{backgroundColor:\"transparent\",color:\"white\"}} ><PhotoCamera className=\"Gif\" /></IconButton>\r\n                  </label>\r\n                </div>\r\n                  \r\n                    <button className=\"tweet_button\" onClick={Post}>Tweet</button>\r\n               </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TweetBox;\r\n","C:\\Users\\Admin\\Videos\\twitter_app\\src\\Post.js",["123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155"],"import React,{useEffect, useState} from 'react'\r\nimport Verified from '@material-ui/icons/VerifiedUser'\r\nimport Person from '@material-ui/icons/AccountCircle'\r\nimport Favourite from '@material-ui/icons/FavoriteBorder'\r\nimport Close from '@material-ui/icons/Close'\r\nimport Repeat from '@material-ui/icons/RepeatOne'\r\nimport Chat from '@material-ui/icons/ChatBubbleOutline'\r\nimport Upload from '@material-ui/icons/PublishRounded'\r\nimport './Post.css'\r\nimport firebase from './firebase'\r\nimport Modal from 'react-modal'\r\nimport FavouriteCircle from '@material-ui/icons/FavoriteRounded'\r\n\r\nimport {useHistory} from 'react-router-dom'\r\nconst Post = ({name,username,img,like,comments,content,id,likedBy,commentCount,index,length},props) => {\r\n var liked;\r\n    let history = useHistory();\r\n  const[show,setShow]=useState(false)\r\n  const[comment,setComment]=useState(\"\");\r\n  const[name1,setName]=useState(\"\");\r\n  const[username1,setUserName]=useState(\"\");\r\n  const[Profile,setProfile]=useState(\"\");\r\n  const[Profile1,setProfile1]=useState(\"\");\r\n  const[Profile2,setProfile2]=useState(\"\");\r\n  var LikedOne=\"\";\r\n  const[Length,setLength]=useState(\"\");\r\n  const[userid,setId]=useState(\"\");\r\n    const customStyles = {\r\n        overlay: {\r\n          \r\n           backgroundColor:\"rgba(0, 0, 0, 0.4)\",\r\n           zIndex:\"100000\"\r\n          },\r\n        content: {\r\n          top: '10%',\r\n          left: '43%',\r\n          right: 'auto',\r\n         margin:'0',\r\n          bottom: 'auto',\r\n          marginRight: '-50%',\r\n          width: '35%',\r\n          height:\"43%\",\r\n          transform: 'translate(-40%, -10%)',\r\n          borderRadius:\"15px\",\r\n        \r\n         opacity:\"1\",\r\n         \r\n          backgroundColor:\"white\"\r\n\r\n         \r\n         \r\n        },\r\n      };\r\n    var key;\r\n    const email=  JSON.parse(localStorage.getItem(\"firebase:authUser:AIzaSyAkUiaMAotBOT7GJHblVk2gC9h37myNPiY:[DEFAULT]\")).email;\r\n    useEffect(()=>{\r\n        firebase.database().ref('/regusers').orderByChild('email').equalTo(email).once('value',async(snap)=>{\r\n          await  snap.forEach((snap)=>{\r\n                setProfile1(snap.val().profileImg)\r\n                setName(snap.val().name);\r\n                setUserName(snap.val().username)\r\n               \r\n            })\r\n        })\r\n        firebase.database().ref('/regusers').orderByChild('username').equalTo(username).once('value',async(snap)=>{\r\n           await snap.forEach((snap)=>{\r\n                setProfile(snap.val().profileImg);\r\n                setId(snap.val().id)\r\n                \r\n            })\r\n        })\r\n       \r\n       \r\n      \r\n    },[Profile,Profile1,likedBy,length])\r\n    const Like=(cls)=>{\r\n         \r\n      const val= firebase.database().ref(`posts/${id}/likedBy`).once('value',(snap)=>{\r\n     \r\n        if(snap.val().includes(username1)){\r\n            \r\n             liked=snap.val();\r\n            firebase.database().ref(`posts/${id}`).update({\r\n                \"like\":like-1\r\n            })\r\n            if(liked.includes(username1+\",\")){\r\n                liked = liked.replace(username1+\",\",\"\");\r\n            }\r\n            else{\r\n                liked =  liked.replace(username1,\"\");\r\n            }\r\n           \r\n            LikedOne=liked;\r\n            firebase.database().ref(`posts/${id}/likedBy`).set(liked);\r\n            \r\n        }\r\n        else{\r\n           \r\n            var liked=snap.val();\r\n            if(liked==\"\"){\r\n                 liked=username1;\r\n            }\r\n            else{\r\n                liked+=\",\"+username1;\r\n            }\r\n           LikedOne=liked;\r\n            firebase.database().ref(`posts/${id}/likedBy`).set(liked)\r\n            firebase.database().ref(`posts/${id}`).update({\r\n                \"like\":like+1\r\n            })\r\n          \r\n        }\r\n       \r\n      }); \r\n     \r\n      if( history.location.pathname==`/posts/${id}`  ){\r\n        history.push({\r\n            pathname:`/posts/${id}`,\r\n            state:{\r\n                username:username,\r\n                username1:username1,\r\n               \r\n                likedBy:LikedOne,\r\n                id:id\r\n            }\r\n        })\r\n       }\r\n          history.push('/');\r\n    }\r\n    const reply=()=>{\r\n        if(comment.length!=0){\r\n        \r\n        firebase.database().ref(`posts/${id}/comments`).push({\r\n            \r\n            name:name1,\r\n            username:username1,\r\n            \"comments\":comment,\r\n            profileImg:Profile1\r\n        })\r\n        firebase.database().ref(`posts/${id}`).update({\r\n            \"commentCount\":commentCount+1\r\n        })\r\n        setComment(\"\");\r\n        close();\r\n    }\r\n    }\r\n    const Chat1=()=>{\r\n        setShow(true)\r\n    }\r\n    const close=()=>{\r\n        setShow(false);\r\n    }\r\n    const changeRoute=()=>{\r\n       if( history.location.pathname==\"/home\"  ){\r\n        history.push({\r\n            pathname:`/posts/${id}`,\r\n            state:{\r\n                username:username,\r\n                username1:username1,\r\n               \r\n                likedBy:likedBy,\r\n                id:id\r\n            }\r\n        })\r\n       }\r\n    }\r\n    const goProfile=()=>{\r\n        if( history.location.pathname=\"/home\"  ){\r\n            history.push({\r\n                pathname:`/profile/${userid}`,\r\n                state:{\r\n                    \r\n                    id:userid\r\n                }\r\n            })\r\n           }\r\n    }\r\n   \r\n    return (\r\n        \r\n        <div className=\"post\">\r\n\r\n            <div className=\"post_avatar\">\r\n            {\r\n                    Profile==\"\" ?\r\n                  \r\n                    <Person className=\"person1\"onClick={goProfile} />\r\n                    :\r\n                    <img src={Profile} className=\"person1 view_msg\" onClick={goProfile}  />\r\n                  }\r\n            </div>\r\n            <div className=\"post_body\">\r\n                <div className=\"post_header\"  onClick={changeRoute}>\r\n                    <div className=\"post_header_text\">\r\n                        <h3>{name}\r\n                            {\" \"}\r\n                            <span className=\"post_headerSpecial\"><Verified className=\"post_badge\"/>{username}</span>\r\n                        </h3>\r\n                    </div>\r\n                    <div className=\"post_headerDescription\">\r\n                        <p>{content}</p>\r\n                    </div>\r\n                </div>\r\n                <img src={img} alt=\"\" className=\"Post_Img\"/>\r\n                <div className=\"post_footer\">\r\n                    <div  className=\"chat\">\r\n                    <Chat className=\"chat\" onClick={Chat1}/>{commentCount!=0 ? commentCount:\"\"}\r\n                    </div>\r\n                    <div>\r\n                  \r\n                    </div>\r\n                    <div id=\"like\">\r\n                  \r\n                    {likedBy.includes(username1) || likedBy.includes(username) ?\r\n                  \r\n                    <div className=\"likeIcon\"> <FavouriteCircle onClick={ Like}   />{like!=0 ? like:\"\"}</div>\r\n                  \r\n                    :\r\n                    <div> <Favourite onClick={ Like}  /> <span >{like!=0 ? like:\"\"}</span></div>\r\n                    }\r\n                     </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <Modal isOpen={show} style={customStyles} onRequestClose={close} >\r\n            <div  id=\"close1\">\r\n                <Close className=\"closeIcon\" onClick={close}/>\r\n            </div>\r\n            <div id=\"modal_content\">\r\n            {\r\n                    Profile==\"\" ?\r\n                  \r\n                    <Person className=\"person1\" style={{marginTop:\"-5px\"}}/>\r\n                    :\r\n                    <img src={Profile} className=\"person1 view_msg\" style={{marginTop:\"0px\"}}  />\r\n                  }\r\n                <div style={Profile == \"\" ?{display:\"flex\",flexDirection:\"column\",marginLeft:\"5px\"} :{display:\"flex\",flexDirection:\"column\",marginLeft:\"10px\",marginTop:\"-3px\"}}>\r\n                    <h3>{name}\r\n                    {\" \"}\r\n                    <span className=\"post_headerSpecial\"><Verified className=\"post_badge\"/>{username}</span>\r\n                    </h3>\r\n                    <div className=\"post_headerDescription\">\r\n                            <p >{content}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"reply\">\r\n                <p>Replying To <span>{username}</span></p>\r\n            </div>\r\n            <div className=\"modal_content_reply\">\r\n            {\r\n                    Profile1==\"\" ?\r\n                  \r\n                    <Person className=\"person\" />\r\n                    :\r\n                    <img src={Profile1} className=\"person view_msg post_person\"   />\r\n                  }\r\n                <input type=\"text\" placeholder=\"Tweet Your Reply\" className=\"reply_input\" value={comment} onChange={(e)=>setComment(e.target.value)}/>\r\n            </div>\r\n            <button className=\"tweet_button tweet_button_Post\"  onClick={reply}>Reply</button>\r\n\r\n\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","C:\\Users\\Admin\\Videos\\twitter_app\\src\\SignUp.js",["156","157"],"C:\\Users\\Admin\\Videos\\twitter_app\\src\\Login.js",["158","159","160","161","162"],"C:\\Users\\Admin\\Videos\\twitter_app\\src\\firebase.js",[],"C:\\Users\\Admin\\Videos\\twitter_app\\src\\ProtectedRoute.js",[],"C:\\Users\\Admin\\Videos\\twitter_app\\src\\PublicRoute.js",[],"C:\\Users\\Admin\\Videos\\twitter_app\\src\\Profile.js",["163","164","165","166","167","168","169","170","171","172","173"],"C:\\Users\\Admin\\Videos\\twitter_app\\src\\FullPage.js",[],"C:\\Users\\Admin\\Videos\\twitter_app\\src\\ViewMessage.js",["174","175","176","177","178","179","180","181"],"import React,{useEffect,useState}from 'react'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport Widgets from './Widgets'\r\nimport firebase from './firebase';\r\nimport Post from './Post'\r\nimport './ViewMessage.css'\r\nimport Person from '@material-ui/icons/AccountCircle'\r\nimport { useLocation ,useHistory} from \"react-router-dom\";\r\nimport Arrow from '@material-ui/icons/ArrowBack'\r\nconst ViewMessage = ({match}) => {\r\n \r\n    const history=useHistory();\r\n    const location = useLocation();\r\n    const[count,setCount]=useState(0);\r\n    const[posts,setPosts]=useState([]);\r\n    const[id,setId]=useState(location.state.id)\r\n    const[comments1,setComments]=useState([]);\r\n    const[profileImg,setProFileImg]=useState(\"\")\r\n    let Profile=\"\";\r\n    useEffect(() => {\r\n        firebase.database().ref(`posts/${location.state.id}`).once('value',async (snap)=>{\r\n                await  setPosts(snap.val())\r\n        })\r\n        firebase.database().ref(`posts/${location.state.id}/comments`).once('value',async(snap)=>{\r\n            setComments([])\r\n         await   snap.forEach((snap)=>{\r\n\r\n                var pimage = \"\";\r\n               \r\n                firebase.database().ref(`/regusers`).orderByChild('username').equalTo(snap.val().username).once('value',async (snapshot)=>{\r\n                   \r\n                 await   snapshot.forEach((s)=>{\r\n                        setComments(prevState=>[...prevState,{comment:snap.val().comments,name:snap.val().name,username:snap.val().username,profileImg:s.val().profileImg}])\r\n                        return;\r\n                         // setProFileImg(s.val().profileImg)\r\n                        //pimage = s.val().profileImg;\r\n                    })\r\n                    \r\n                })\r\n                \r\n               \r\n            })\r\n            \r\n        })\r\n        \r\n        \r\n    }, [count])\r\n    \r\n   console.log(location.state)\r\n    \r\n\r\n    return (\r\n      \r\n        <div onClick={()=>setCount(count+1)}>\r\n            <div className=\"app\">\r\n            <Sidebar/>\r\n            <div id=\"feed\">\r\n            <div id=\"header1\">\r\n            <Arrow className=\"arrow\" onClick={()=>history.push('/home')} style={{cursor:\"pointer\"}}/>\r\n                <h2 id=\"home1 view_msg_home\" style={{marginLeft:\"10px\"}}>Tweet</h2>\r\n           </div>\r\n            <Post key= {posts.username} name={posts.name} username={location.state.username} like={posts.like} img={posts.image} content={posts.content} comments={posts.comment} id={id} likedBy={location.state.likedBy} commentCount={posts.commentCount}  />     \r\n            \r\n           {\r\n               comments1.map((comment)=>{\r\n               \r\n                   \r\n                    return <div className=\"message_reply\">\r\n                    <div style={{display:\"flex\",flexDirection:\"column\"}} className=\"msg\"  >\r\n                        <div className=\"profile_details_msg\">\r\n                        {\r\n                    comment.profileImg==\"\"?\r\n                  \r\n                    <Person className=\"person1\" />\r\n                    :\r\n                    <img src={comment.profileImg} className=\"person1 view_msg\"  />\r\n                  }\r\n                            <p className=\"name\" >{comment.name}<span>{comment.username}</span></p>\r\n                            \r\n                        </div>\r\n                        <div className=\"msg_content\">\r\n                            <p className=\"reply_msg1\" >Replying To <span className=\"reply_username\">{posts.username}</span></p>\r\n                            <p className=\"view_msg_comment\">{comment.comment}</p>\r\n                        </div>\r\n                    </div>\r\n                  \r\n                </div>\r\n                \r\n               })\r\n           }\r\n           \r\n            </div>\r\n           \r\n            <Widgets/>\r\n       \r\n            </div>\r\n        </div>\r\n       \r\n    )\r\n        \r\n        \r\n}\r\n\r\nexport default ViewMessage\r\n","C:\\Users\\Admin\\Videos\\twitter_app\\src\\Notification.js",["182","183","184","185","186","187"],"import React,{useState,useEffect}from 'react'\r\nimport Sidebar from './Sidebar'\r\nimport Arrow from '@material-ui/icons/ArrowBack'\r\nimport {useHistory} from 'react-router-dom'\r\nimport Widgets from './Widgets'\r\nimport firebase from './firebase'\r\nimport './Notification.css';\r\nimport Person from '@material-ui/icons/AccountCircle';\r\nimport Verified from '@material-ui/icons/VerifiedUser';\r\nimport Favourite from '@material-ui/icons/FavoriteRounded'\r\nconst Notification = () => {\r\n    const email=  JSON.parse(localStorage.getItem(\"firebase:authUser:AIzaSyAkUiaMAotBOT7GJHblVk2gC9h37myNPiY:[DEFAULT]\")).email;\r\n    const[userName,setUserName]=useState(\"\")\r\n   var Name;\r\n    const[Post,setPosts]=useState([]);\r\n    const[image,setImage]=useState(\"\");\r\n    useEffect(() => {\r\n        firebase.database().ref('regusers').orderByChild('email').equalTo(email).on('value',async(snap)=>{\r\n           await snap.forEach((s)=>{\r\n               setUserName(s.val().username)\r\n               setImage(s.val().profileImg)\r\n               firebase.database().ref(`posts`).orderByChild('username').equalTo(s.val().username).once('value',async(snap)=>{\r\n                    setPosts([]);\r\n              await  snap.forEach((s)=>{\r\n                  \r\n                    setPosts(prevState=>[...prevState,{posts:s.val(),id:s.key}])\r\n                   \r\n                    \r\n                }) });})})\r\n         \r\n    }, [])\r\n   \r\n    const history=useHistory();\r\n    return (\r\n        <div className=\"app\" >\r\n        <Sidebar/>\r\n        <div id=\"feed\" >\r\n        \r\n         <div id=\"header1\">\r\n         <Arrow className=\"arrow\" onClick={()=>history.push('/home')} style={{cursor:\"pointer\"}}/>\r\n            <div className=\"head\">\r\n               \r\n               <h2>Notification</h2>\r\n\r\n            </div>\r\n         </div>\r\n         {Post.map((post)=>{\r\n \r\nName=post.posts.likedBy.split(\",\");\r\nName= Name.filter((name)=>{\r\nreturn name!=\"\"\r\n})\r\nconsole.log(Name)\r\n             return ( post.posts.like!=0 && \r\n            <div className=\"post_border\">\r\n               <div className=\"post_header1\">\r\n                <Favourite className=\"favourite1\"/>\r\n               <p> <span className=\"bold\">{Name[0]}</span>{post.posts.like>1?` and ${post.posts.like-1} others liked Your Tweet`:\" liked Your Tweet\"}</p>\r\n               </div>\r\n            <div className=\"notification_post\">\r\n             <div className=\"likes\">\r\n              <div className=\"post_avatar\">\r\n            {\r\n                    image==\"\" ?\r\n                  \r\n                    <Person className=\"person1\" />\r\n                    :\r\n                    <img src={image} className=\" post_header_img\"  />\r\n                  }\r\n            </div>\r\n            <div className=\"post_body\" style={{marginLeft:\"-10px\"}}>\r\n                <div className=\"post_header\" style={{marginTop:\"12px\"}}>\r\n                    <div className=\"post_header_text\">\r\n                        <h3>{post.posts.name}\r\n                            {\" \"}\r\n                            <span className=\"post_headerSpecial\"><Verified className=\"post_badge\"/>{post.posts.username}</span>\r\n                        </h3>\r\n                    </div>\r\n                    \r\n                </div>\r\n               \r\n               \r\n            </div>\r\n   \r\n\r\n             </div>\r\n             \r\n             <div className=\"notification_content\">\r\n               {post.posts.content}\r\n             </div>\r\n                 </div>\r\n        </div>\r\n             )\r\n         }\r\n         \r\n         )\r\n         \r\n         }\r\n         \r\n         </div>\r\n         <Widgets/>\r\n         </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","C:\\Users\\Admin\\Videos\\twitter_app\\src\\UserProfile.js",["188","189","190","191","192","193","194","195","196","197","198","199"],"import React,{useEffect,useState} from 'react'\r\nimport Sidebar from './Sidebar'\r\nimport Widgets from './Widgets'\r\nimport './Profile.css'\r\nimport Arrow from '@material-ui/icons/ArrowBack'\r\nimport firebase from './firebase'\r\nimport {useHistory} from 'react-router-dom'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Camera from \"@material-ui/icons/CameraAlt\"\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { FaUser, FaUserCircle,FaPlus } from 'react-icons/fa';\r\nimport PhotoCamera from \"@material-ui/icons/Image\";\r\nimport Posts from './Post'\r\nimport {useLocation} from 'react-router-dom'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      \r\n        '&.active, &:hover, &.active:hover':{\r\n          color:\"transparent\",\r\n        \r\n         boxShadow:\"none\",\r\n          border:\"none\",\r\n          outline:\"none\"\r\n      }\r\n    },\r\n    input: {\r\n      display: \"none\"\r\n    }\r\n  }));\r\nconst UserProfile = () => {\r\n    const location=useLocation();\r\n\r\n    let image;\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const email=  JSON.parse(localStorage.getItem(\"firebase:authUser:AIzaSyAkUiaMAotBOT7GJHblVk2gC9h37myNPiY:[DEFAULT]\")).email;\r\n    const[id,setId]=useState(\"\");\r\n    const[Profile,setProfile]=useState(\"\");\r\n    const[Profile1,setProfile1]=useState(\"\");\r\n    const[count,setCount]=useState(0);\r\n    const[userName,setUserName]=useState(\"\");\r\n    const[Mobile,setMobile]=useState(\"\");\r\n    const[Post,setPosts]=useState([]);\r\n    const[name,setName]=useState(\"\");\r\n    const [url,setUrl]=useState(\"\");\r\n    const [burl,setBUrl]=useState(\"\");\r\n    const[postCount,setPostCount]=useState(\"\");\r\n   const[count1,setCount1]=useState(0);\r\n    useEffect(() => {\r\n        firebase.database().ref('regusers').orderByChild('id').equalTo(location.state.id).on('value',async (snap)=>{\r\n           await snap.forEach((s)=>{\r\n                setId(s.key)\r\n                setProfile1(s.val().profileImgBackdrop)\r\n                setProfile(s.val().profileImg)\r\n               setCount(s.val().posts)\r\n               setUserName(s.val().username)\r\n               setName(s.val().name);\r\n               setPostCount(s.val().Posts)\r\n               setMobile(s.val().mobile)\r\n               firebase.database().ref(`posts`).orderByChild('username').equalTo(s.val().username).once('value',async(snap)=>{\r\n                    setPosts([]);\r\n               await snap.forEach((s)=>{\r\n                  \r\n                    setPosts(prevState=>[...prevState,{posts:s.val(),id:s.key}])\r\n                        \r\n                    \r\n                })\r\n               \r\n       \r\n    });\r\n              \r\n            })\r\n           \r\n        })\r\n            \r\n      \r\n         \r\n      }, [image,count1])\r\n      \r\n      const handleChange=(e)=>{\r\n      \r\n        image=e.target.files;\r\n        console.log(\"a\");\r\n        setProfileImg(image)\r\n        \r\n       }\r\n       const handleChange1=(e)=>{\r\n      \r\n        image=e.target.files;\r\n        console.log(\"b\");\r\n        setProfileImg1(image)\r\n        \r\n       }\r\n       \r\n       const setProfileImg=(image)=>{\r\n           console.log(\"a\");\r\n        var storageUrl = 'image/';\r\n        var storageRef = firebase.storage().ref(storageUrl + image[0].name);\r\n     storageRef.put(image[0]).then(()=>{\r\n            firebase.storage().ref(storageUrl).child(image[0].name).getDownloadURL().then((url)=>{\r\n                firebase.database().ref(`regusers/${id}`).update({\r\n                    \"profileImg\":url\r\n                  })\r\n                setUrl(url);\r\n            });\r\n        })\r\n        \r\n         \r\n       }\r\n       const setProfileImg1=(image)=>{\r\n           console.log(\"b\");\r\n        var storageUrl = 'image/';\r\n        var storageRef = firebase.storage().ref(storageUrl + image[0].name);\r\n     storageRef.put(image[0]).then(()=>{\r\n            firebase.storage().ref(storageUrl).child(image[0].name).getDownloadURL().then((url)=>{\r\n                firebase.database().ref(`regusers/${id}`).update({\r\n                    \"profileImgBackdrop\":url\r\n                  })\r\n                setBUrl(url);\r\n            });\r\n        })\r\n        \r\n         \r\n       }\r\n     \r\n    return (\r\n        <div className=\"app\" onClick={()=>setCount1(count1+1)}>\r\n           <Sidebar/>\r\n           <div id=\"feed\" >\r\n            <div id=\"header1\">\r\n                <Arrow className=\"arrow\" onClick={()=>history.push('/home')} />\r\n                <div className=\"head\">\r\n                    <h2 >{name}</h2> \r\n                    <p>{count}Tweets</p>\r\n                    </div>\r\n            </div>\r\n            <div id=\"body\">\r\n                <div id=\"background_img\" onChange={(e)=>handleChange1(e)}>\r\n                \r\n                <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\"  />\r\n                <label htmlFor=\"icon-button-file\"   >\r\n                    {\r\n                        Profile1 ==\"\" ?\r\n                    \r\n                <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" style={{backgroundColor:\"transparent\",color:\"white\"}} ><Camera className=\"show\" /></IconButton> \r\n                :\r\n                <img src={Profile1} className=\"profile_img1\"/>\r\n                    }\r\n                </label>\r\n                </div>\r\n                <div className=\"person_icon_hide\">\r\n                <input accept=\"image/*\" className={classes.input} id=\"icon-button-file1\" type=\"file\"  onChange={(e)=>handleChange(e)}/>\r\n                <label htmlFor=\"icon-button-file1\"   >\r\n                    {\r\n                        Profile ==\"\" ?\r\n                     \r\n                    <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" style={{backgroundColor:\"transparent\",color:\"white\"}}><FaUserCircle className=\"profile_img\"  /></IconButton> \r\n                    :\r\n                    <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\"style={{backgroundColor:\"transparent\",color:\"white\"}} ><img src={Profile}  className=\"profile_img profile_img2\"/></IconButton> \r\n}\r\n                </label>\r\n                </div>\r\n            </div>\r\n               <div className=\"names\">\r\n                    <h3>{name}</h3>\r\n                    <p>{userName}</p>\r\n                    <p>+91-{Mobile}</p>\r\n                </div>\r\n                <div className=\"tweets\">\r\n                    <h3>Tweets &amp; Replies</h3>\r\n                </div> \r\n            {\r\n                Post.map((post,index)=>\r\n                {\r\n                    return <Posts key= {post.id} name={post.posts.name} username={post.posts.username} like={post.posts.like} img={post.posts.image} content={post.posts.content} comments={post.posts.comment} id={post.id} likedBy={post.posts.likedBy} commentCount={post.posts.commentCount} index={index}/>\r\n              \r\n                })\r\n            }\r\n           </div>\r\n           <Widgets/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserProfile\r\n","C:\\Users\\Admin\\Videos\\twitter_app\\src\\ForgettenPassword.js",["200"],{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":3,"column":33,"nodeType":"207","messageId":"208","endLine":3,"endColumn":38},{"ruleId":"205","severity":1,"message":"209","line":3,"column":46,"nodeType":"207","messageId":"208","endLine":3,"endColumn":50},{"ruleId":"205","severity":1,"message":"210","line":3,"column":52,"nodeType":"207","messageId":"208","endLine":3,"endColumn":60},{"ruleId":"205","severity":1,"message":"211","line":4,"column":8,"nodeType":"207","messageId":"208","endLine":4,"endColumn":19},{"ruleId":"212","severity":1,"message":"213","line":37,"column":8,"nodeType":"214","endLine":37,"endColumn":10,"suggestions":"215"},{"ruleId":"216","severity":1,"message":"217","line":43,"column":17,"nodeType":"218","endLine":43,"endColumn":63},{"ruleId":"219","severity":1,"message":"220","line":44,"column":44,"nodeType":"221","messageId":"222","endLine":44,"endColumn":46},{"ruleId":"219","severity":1,"message":"220","line":45,"column":44,"nodeType":"221","messageId":"222","endLine":45,"endColumn":46},{"ruleId":"219","severity":1,"message":"220","line":46,"column":44,"nodeType":"221","messageId":"222","endLine":46,"endColumn":46},{"ruleId":"219","severity":1,"message":"220","line":24,"column":31,"nodeType":"221","messageId":"222","endLine":24,"endColumn":33},{"ruleId":"205","severity":1,"message":"223","line":1,"column":15,"nodeType":"207","messageId":"208","endLine":1,"endColumn":24},{"ruleId":"205","severity":1,"message":"224","line":1,"column":25,"nodeType":"207","messageId":"208","endLine":1,"endColumn":33},{"ruleId":"219","severity":1,"message":"225","line":18,"column":27,"nodeType":"221","messageId":"222","endLine":18,"endColumn":29},{"ruleId":"205","severity":1,"message":"226","line":3,"column":8,"nodeType":"207","messageId":"208","endLine":3,"endColumn":14},{"ruleId":"205","severity":1,"message":"227","line":5,"column":32,"nodeType":"207","messageId":"208","endLine":5,"endColumn":50},{"ruleId":"205","severity":1,"message":"228","line":5,"column":52,"nodeType":"207","messageId":"208","endLine":5,"endColumn":71},{"ruleId":"205","severity":1,"message":"229","line":5,"column":73,"nodeType":"207","messageId":"208","endLine":5,"endColumn":93},{"ruleId":"205","severity":1,"message":"230","line":5,"column":95,"nodeType":"207","messageId":"208","endLine":5,"endColumn":115},{"ruleId":"205","severity":1,"message":"231","line":5,"column":117,"nodeType":"207","messageId":"208","endLine":5,"endColumn":134},{"ruleId":"205","severity":1,"message":"232","line":5,"column":136,"nodeType":"207","messageId":"208","endLine":5,"endColumn":154},{"ruleId":"205","severity":1,"message":"233","line":5,"column":156,"nodeType":"207","messageId":"208","endLine":5,"endColumn":171},{"ruleId":"205","severity":1,"message":"234","line":5,"column":173,"nodeType":"207","messageId":"208","endLine":5,"endColumn":190},{"ruleId":"205","severity":1,"message":"235","line":5,"column":192,"nodeType":"207","messageId":"208","endLine":5,"endColumn":210},{"ruleId":"205","severity":1,"message":"236","line":7,"column":8,"nodeType":"207","messageId":"208","endLine":7,"endColumn":14},{"ruleId":"205","severity":1,"message":"210","line":8,"column":9,"nodeType":"207","messageId":"208","endLine":8,"endColumn":17},{"ruleId":"205","severity":1,"message":"237","line":8,"column":29,"nodeType":"207","messageId":"208","endLine":8,"endColumn":40},{"ruleId":"212","severity":1,"message":"238","line":43,"column":8,"nodeType":"214","endLine":43,"endColumn":17,"suggestions":"239"},{"ruleId":"219","severity":1,"message":"220","line":113,"column":28,"nodeType":"221","messageId":"222","endLine":113,"endColumn":30},{"ruleId":"216","severity":1,"message":"217","line":117,"column":21,"nodeType":"218","endLine":117,"endColumn":92},{"ruleId":"205","severity":1,"message":"240","line":6,"column":8,"nodeType":"207","messageId":"208","endLine":6,"endColumn":14},{"ruleId":"205","severity":1,"message":"241","line":8,"column":8,"nodeType":"207","messageId":"208","endLine":8,"endColumn":14},{"ruleId":"205","severity":1,"message":"242","line":16,"column":6,"nodeType":"207","messageId":"208","endLine":16,"endColumn":11},{"ruleId":"205","severity":1,"message":"243","line":24,"column":9,"nodeType":"207","messageId":"208","endLine":24,"endColumn":17},{"ruleId":"205","severity":1,"message":"244","line":24,"column":18,"nodeType":"207","messageId":"208","endLine":24,"endColumn":29},{"ruleId":"205","severity":1,"message":"245","line":26,"column":9,"nodeType":"207","messageId":"208","endLine":26,"endColumn":15},{"ruleId":"205","severity":1,"message":"246","line":26,"column":16,"nodeType":"207","messageId":"208","endLine":26,"endColumn":25},{"ruleId":"205","severity":1,"message":"247","line":54,"column":9,"nodeType":"207","messageId":"208","endLine":54,"endColumn":12},{"ruleId":"212","severity":1,"message":"248","line":75,"column":7,"nodeType":"214","endLine":75,"endColumn":40,"suggestions":"249"},{"ruleId":"205","severity":1,"message":"250","line":78,"column":13,"nodeType":"207","messageId":"208","endLine":78,"endColumn":16},{"ruleId":"251","severity":1,"message":"252","line":82,"column":14,"nodeType":"207","messageId":"253","endLine":82,"endColumn":19},{"ruleId":"251","severity":1,"message":"252","line":86,"column":16,"nodeType":"207","messageId":"253","endLine":86,"endColumn":21},{"ruleId":"251","severity":1,"message":"252","line":87,"column":17,"nodeType":"207","messageId":"253","endLine":87,"endColumn":22},{"ruleId":"251","severity":1,"message":"252","line":87,"column":25,"nodeType":"207","messageId":"253","endLine":87,"endColumn":30},{"ruleId":"251","severity":1,"message":"252","line":90,"column":17,"nodeType":"207","messageId":"253","endLine":90,"endColumn":22},{"ruleId":"251","severity":1,"message":"252","line":90,"column":26,"nodeType":"207","messageId":"253","endLine":90,"endColumn":31},{"ruleId":"251","severity":1,"message":"252","line":93,"column":22,"nodeType":"207","messageId":"253","endLine":93,"endColumn":27},{"ruleId":"251","severity":1,"message":"252","line":94,"column":64,"nodeType":"207","messageId":"253","endLine":94,"endColumn":69},{"ruleId":"219","severity":1,"message":"220","line":100,"column":21,"nodeType":"221","messageId":"222","endLine":100,"endColumn":23},{"ruleId":"219","severity":1,"message":"220","line":116,"column":36,"nodeType":"221","messageId":"222","endLine":116,"endColumn":38},{"ruleId":"219","severity":1,"message":"225","line":131,"column":26,"nodeType":"221","messageId":"222","endLine":131,"endColumn":28},{"ruleId":"219","severity":1,"message":"220","line":154,"column":37,"nodeType":"221","messageId":"222","endLine":154,"endColumn":39},{"ruleId":"254","severity":1,"message":"255","line":168,"column":13,"nodeType":"256","messageId":"257","endLine":168,"endColumn":46},{"ruleId":"219","severity":1,"message":"220","line":185,"column":28,"nodeType":"221","messageId":"222","endLine":185,"endColumn":30},{"ruleId":"216","severity":1,"message":"217","line":189,"column":21,"nodeType":"218","endLine":189,"endColumn":92},{"ruleId":"219","severity":1,"message":"225","line":207,"column":74,"nodeType":"221","messageId":"222","endLine":207,"endColumn":76},{"ruleId":"219","severity":1,"message":"225","line":216,"column":90,"nodeType":"221","messageId":"222","endLine":216,"endColumn":92},{"ruleId":"219","severity":1,"message":"225","line":219,"column":70,"nodeType":"221","messageId":"222","endLine":219,"endColumn":72},{"ruleId":"219","severity":1,"message":"220","line":231,"column":28,"nodeType":"221","messageId":"222","endLine":231,"endColumn":30},{"ruleId":"216","severity":1,"message":"217","line":235,"column":21,"nodeType":"218","endLine":235,"endColumn":98},{"ruleId":"219","severity":1,"message":"220","line":237,"column":37,"nodeType":"221","messageId":"222","endLine":237,"endColumn":39},{"ruleId":"219","severity":1,"message":"220","line":252,"column":29,"nodeType":"221","messageId":"222","endLine":252,"endColumn":31},{"ruleId":"216","severity":1,"message":"217","line":256,"column":21,"nodeType":"218","endLine":256,"endColumn":85},{"ruleId":"216","severity":1,"message":"217","line":64,"column":12,"nodeType":"218","endLine":64,"endColumn":57},{"ruleId":"219","severity":1,"message":"220","line":70,"column":131,"nodeType":"221","messageId":"222","endLine":70,"endColumn":133},{"ruleId":"205","severity":1,"message":"258","line":3,"column":8,"nodeType":"207","messageId":"208","endLine":3,"endColumn":15},{"ruleId":"205","severity":1,"message":"210","line":6,"column":9,"nodeType":"207","messageId":"208","endLine":6,"endColumn":17},{"ruleId":"205","severity":1,"message":"259","line":36,"column":14,"nodeType":"207","messageId":"208","endLine":36,"endColumn":19},{"ruleId":"205","severity":1,"message":"259","line":41,"column":15,"nodeType":"207","messageId":"208","endLine":41,"endColumn":20},{"ruleId":"216","severity":1,"message":"217","line":47,"column":16,"nodeType":"218","endLine":47,"endColumn":63},{"ruleId":"205","severity":1,"message":"260","line":11,"column":10,"nodeType":"207","messageId":"208","endLine":11,"endColumn":16},{"ruleId":"205","severity":1,"message":"261","line":11,"column":31,"nodeType":"207","messageId":"208","endLine":11,"endColumn":37},{"ruleId":"205","severity":1,"message":"262","line":12,"column":8,"nodeType":"207","messageId":"208","endLine":12,"endColumn":19},{"ruleId":"205","severity":1,"message":"263","line":42,"column":12,"nodeType":"207","messageId":"208","endLine":42,"endColumn":15},{"ruleId":"205","severity":1,"message":"264","line":43,"column":12,"nodeType":"207","messageId":"208","endLine":43,"endColumn":16},{"ruleId":"205","severity":1,"message":"265","line":44,"column":11,"nodeType":"207","messageId":"208","endLine":44,"endColumn":20},{"ruleId":"212","severity":1,"message":"266","line":75,"column":10,"nodeType":"214","endLine":75,"endColumn":24,"suggestions":"267"},{"ruleId":"219","severity":1,"message":"220","line":140,"column":34,"nodeType":"221","messageId":"222","endLine":140,"endColumn":36},{"ruleId":"216","severity":1,"message":"217","line":144,"column":17,"nodeType":"218","endLine":144,"endColumn":63},{"ruleId":"219","severity":1,"message":"220","line":152,"column":33,"nodeType":"221","messageId":"222","endLine":152,"endColumn":35},{"ruleId":"216","severity":1,"message":"217","line":156,"column":148,"nodeType":"218","endLine":156,"endColumn":206},{"ruleId":"205","severity":1,"message":"268","line":17,"column":14,"nodeType":"207","messageId":"208","endLine":17,"endColumn":19},{"ruleId":"205","severity":1,"message":"269","line":19,"column":11,"nodeType":"207","messageId":"208","endLine":19,"endColumn":21},{"ruleId":"205","severity":1,"message":"270","line":19,"column":22,"nodeType":"207","messageId":"208","endLine":19,"endColumn":35},{"ruleId":"205","severity":1,"message":"271","line":20,"column":9,"nodeType":"207","messageId":"208","endLine":20,"endColumn":16},{"ruleId":"205","severity":1,"message":"272","line":29,"column":21,"nodeType":"207","messageId":"208","endLine":29,"endColumn":27},{"ruleId":"212","severity":1,"message":"273","line":48,"column":8,"nodeType":"214","endLine":48,"endColumn":15,"suggestions":"274"},{"ruleId":"219","severity":1,"message":"220","line":73,"column":39,"nodeType":"221","messageId":"222","endLine":73,"endColumn":41},{"ruleId":"216","severity":1,"message":"217","line":77,"column":21,"nodeType":"218","endLine":77,"endColumn":83},{"ruleId":"205","severity":1,"message":"275","line":13,"column":11,"nodeType":"207","messageId":"208","endLine":13,"endColumn":19},{"ruleId":"212","severity":1,"message":"266","line":31,"column":8,"nodeType":"214","endLine":31,"endColumn":10,"suggestions":"276"},{"ruleId":"219","severity":1,"message":"225","line":51,"column":12,"nodeType":"221","messageId":"222","endLine":51,"endColumn":14},{"ruleId":"219","severity":1,"message":"225","line":54,"column":38,"nodeType":"221","messageId":"222","endLine":54,"endColumn":40},{"ruleId":"219","severity":1,"message":"220","line":64,"column":26,"nodeType":"221","messageId":"222","endLine":64,"endColumn":28},{"ruleId":"216","severity":1,"message":"217","line":68,"column":21,"nodeType":"218","endLine":68,"endColumn":70},{"ruleId":"205","severity":1,"message":"260","line":11,"column":10,"nodeType":"207","messageId":"208","endLine":11,"endColumn":16},{"ruleId":"205","severity":1,"message":"261","line":11,"column":31,"nodeType":"207","messageId":"208","endLine":11,"endColumn":37},{"ruleId":"205","severity":1,"message":"262","line":12,"column":8,"nodeType":"207","messageId":"208","endLine":12,"endColumn":19},{"ruleId":"205","severity":1,"message":"277","line":36,"column":11,"nodeType":"207","messageId":"208","endLine":36,"endColumn":16},{"ruleId":"205","severity":1,"message":"263","line":45,"column":12,"nodeType":"207","messageId":"208","endLine":45,"endColumn":15},{"ruleId":"205","severity":1,"message":"264","line":46,"column":12,"nodeType":"207","messageId":"208","endLine":46,"endColumn":16},{"ruleId":"205","severity":1,"message":"265","line":47,"column":11,"nodeType":"207","messageId":"208","endLine":47,"endColumn":20},{"ruleId":"212","severity":1,"message":"273","line":78,"column":10,"nodeType":"214","endLine":78,"endColumn":24,"suggestions":"278"},{"ruleId":"219","severity":1,"message":"220","line":143,"column":34,"nodeType":"221","messageId":"222","endLine":143,"endColumn":36},{"ruleId":"216","severity":1,"message":"217","line":147,"column":17,"nodeType":"218","endLine":147,"endColumn":63},{"ruleId":"219","severity":1,"message":"220","line":155,"column":33,"nodeType":"221","messageId":"222","endLine":155,"endColumn":35},{"ruleId":"216","severity":1,"message":"217","line":159,"column":148,"nodeType":"218","endLine":159,"endColumn":206},{"ruleId":"216","severity":1,"message":"217","line":34,"column":12,"nodeType":"218","endLine":34,"endColumn":57},"no-native-reassign",["279"],"no-negated-in-lhs",["280"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Redirect' is defined but never used.","'TwitterIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'email' and 'history.location.pathname'. Either include them or remove the dependency array.","ArrayExpression",["281"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'useState' is defined but never used.","Expected '!==' and instead saw '!='.","'Search' is defined but never used.","'TwitterShareButton' is defined but never used.","'TwitterFollowButton' is defined but never used.","'TwitterHashtagButton' is defined but never used.","'TwitterMentionButton' is defined but never used.","'TwitterTweetEmbed' is defined but never used.","'TwitterMomentShare' is defined but never used.","'TwitterDMButton' is defined but never used.","'TwitterVideoEmbed' is defined but never used.","'TwitterOnAirButton' is defined but never used.","'Smiley' is defined but never used.","'useLocation' is defined but never used.","React Hook useEffect has a missing dependency: 'uid'. Either include it or remove the dependency array.",["282"],"'Repeat' is defined but never used.","'Upload' is defined but never used.","'liked' is defined but never used.","'Profile2' is assigned a value but never used.","'setProfile2' is assigned a value but never used.","'Length' is assigned a value but never used.","'setLength' is assigned a value but never used.","'key' is defined but never used.","React Hook useEffect has missing dependencies: 'email' and 'username'. Either include them or remove the dependency array.",["283"],"'val' is assigned a value but never used.","no-use-before-define","'liked' was used before it was defined.","usedBeforeDefined","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'Twitter' is defined but never used.","'modal' is assigned a value but never used.","'FaUser' is defined but never used.","'FaPlus' is defined but never used.","'PhotoCamera' is defined but never used.","'url' is assigned a value but never used.","'burl' is assigned a value but never used.","'postCount' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'email'. Either include it or remove the dependency array.",["284"],"'setId' is assigned a value but never used.","'profileImg' is assigned a value but never used.","'setProFileImg' is assigned a value but never used.","'Profile' is assigned a value but never used.","'pimage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'location.state.id'. Either include it or remove the dependency array.",["285"],"'userName' is assigned a value but never used.",["286"],"'email' is assigned a value but never used.",["287"],"no-global-assign","no-unsafe-negation",{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},"Update the dependencies array to be: [email, history.location.pathname]",{"range":"302","text":"303"},"Update the dependencies array to be: [Profile, uid]",{"range":"304","text":"305"},"Update the dependencies array to be: [Profile, Profile1, likedBy, length, email, username]",{"range":"306","text":"307"},"Update the dependencies array to be: [image, count1, email]",{"range":"308","text":"309"},"Update the dependencies array to be: [count, location.state.id]",{"range":"310","text":"311"},"Update the dependencies array to be: [email]",{"range":"312","text":"313"},"Update the dependencies array to be: [image, count1, location.state.id]",{"range":"314","text":"315"},[1469,1471],"[email, history.location.pathname]",[1514,1523],"[Profile, uid]",[2593,2626],"[Profile, Profile1, likedBy, length, email, username]",[2645,2659],"[image, count1, email]",[1832,1839],"[count, location.state.id]",[1403,1405],"[email]",[2741,2755],"[image, count1, location.state.id]"]